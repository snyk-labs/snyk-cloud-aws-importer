#
# Â© 2023 Snyk Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation to Deploy AWS Account Monitor lambda function.
Parameters:
  LambdaName:
    Type: String
    Description: Name of Lambda function to create.
    AllowedPattern: '^.*[^0-9]$'
  SnykAPIToken:
    Type: String
    Description: API Token of Service Account / PAT from Snyk
  AccountMonitorConfig:
    Type: String
    Description: JSON document for account monitor config
Resources:
  rSnykAPISecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Description: Snyk API Token
      Name: snyk/account_monitor/token
      SecretString: !Sub "{\"token\": \"${SnykAPIToken}\"}"
  rConfigParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Description: "Contains the configuration in JSON format"
      Name: "/snyk/account_monitor/config"
      Value: !Ref AccountMonitorConfig
  rAccountEventsCt:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: CloudWatch Rule to Trigger Snyk AWS Account Monitor Lambda
      Name: SnykCloudControlTowerAccountCreated
      EventPattern:
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventName:
            - 'CreateManagedAccount'
      State: ENABLED
      Targets:
        - Arn: !GetAtt rLambdaFunction.Arn
          Id: "NewAccountEventLambda"
  rAccountEventsOrgs:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: CloudWatch Rule to Trigger Snyk AWS Account Monitor Lambda
      Name: SnykCloudOrgsAccountCreated
      EventPattern:
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventName:
            - 'CreateAccountResult'
      State: ENABLED
      Targets:
        - Arn: !GetAtt rLambdaFunction.Arn
          Id: "NewAccountEventLambda"
  rPermissionForEventsToInvokeLambdaCt:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt rLambdaFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt rAccountEventsCt.Arn
  rPermissionForEventsToInvokeLambdaOrgs:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt rLambdaFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt rAccountEventsOrgs.Arn
  rLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: SnykCloudAWSMonitor
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /
  rLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${LambdaName}'
      Description: Snyk Cloud AWS Account Monitor Function
      Runtime: python3.9
      Code:
        S3Bucket: aws-account-monitor
        S3Key: aws-account-monitor.zip
      Handler: main.lambda_handler
      MemorySize: 128
      Environment:
        Variables:
          SNYK_TOKEN_SECRET: !Ref rSnykAPISecret
          SSM_CONFIG_NAME: !Ref rConfigParameter
      Timeout: 60
      Role:
        'Fn::GetAtt':
          - rLambdaRole
          - Arn